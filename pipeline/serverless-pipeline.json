{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Main template for serverless CI/CD pipeline",
  "Parameters": {
    "AppName": {
      "Type": "String",
      "Description": "Name of the application",
      "MinLength": "1",
      "MaxLength": "80",
      "AllowedPattern": "[A-Za-z0-9-]+",
      "ConstraintDescription": "Application name must only contain upper and lower case letters, numbers and -."
    },
    "InputTemplate": {
      "Type": "String",
      "Description": "The input template, this is the template before it is transformed. Can be a json or yaml file.",
      "Default": "template.json"
    },
    "OutputTemplate": {
      "Type": "String",
      "Description": "The name of the transformed template. Must be a yaml file.",
      "Default": "template-output.yaml",
      "MinLength": "1"
    },
    "CodeBuildImage": {
      "Type": "String",
      "Default": "aws/codebuild/nodejs:7.0.0",
      "Description": "Image used for CodeBuild project."
    },
    "GitHubRepoName": {
      "Type": "String",
      "Description": "The name of the GitHub repository"
    },
    "GitHubRepoBranch": {
      "Type": "String",
      "Description": "The GitHub repo branch code pipelines should watch for changes on",
      "Default": "master"
    },
    "GitHubUser": {
      "Type": "String",
      "Description": "GitHub UserName/OrganisationName. Case sensitive.",
      "Default": "Topdanmark"
    },
    "GitHubToken": {
      "NoEcho": true,
      "Type": "String",
      "Description": "Secret. OAuthToken with access to Repo. Long string of characters and digits."
    },
    "BusinessUnit" : {
      "Description" : "Cost-allocation business unit",
      "Default": "IT-eBusiness",
      "Type" : "String",
      "MinLength": "2",
      "MaxLength": "256",
      "AllowedPattern" : "^[a-zA-Z][-a-zA-Z0-9]*$",
      "ConstraintDescription" : "must be between 2 and 256 characters, must start with a letter character, must only contain letters and numbers and the literal character -"
    },
    "CostUnit" : {
      "Description" : "Cost-allocation break-down to specific unit, team or project.",
      "Default": "IT-Drift",
      "Type" : "String",
      "MinLength": "2",
      "MaxLength": "256",
      "AllowedPattern" : "^[a-zA-Z][-a-zA-Z0-9]*$",
      "ConstraintDescription" : "must be between 2 and 256 characters, must start with a letter character, must only contain letters and numbers and the literal character -"
    },
    "SolutionName" : {
      "Description" : "Name of solution/business service.",
      "Default": "ExecutionPlatform",
      "Type" : "String",
      "MinLength": "2",
      "MaxLength": "256",
      "AllowedPattern" : "^[a-zA-Z][-a-zA-Z0-9]*$",
      "ConstraintDescription" : "must be between 2 and 256 characters, must start with a letter character, must only contain letters and numbers and the literal character -"
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Project information"
          },
          "Parameters": [
            "AppName",
            "CodeBuildImage",
            "InputTemplate",
            "OutputTemplate"
          ]
        },
        {
          "Label": {
            "default": "GitHub information"
          },
          "Parameters": [
            "GitHubUser",
            "GitHubToken",
            "GitHubRepoName",
            "GitHubRepoBranch"
          ]
        },
        {
          "Label": {
            "default": "Cost Allocation Tags"
          },
          "Parameters": [
            "BusinessUnit",
            "CostUnit",
            "SolutionName"
          ]
        }
      ]
    }
  },
  "Resources": {
    "CodeBuildTrustRole": {
      "Description": "Creating service role in IAM for AWS CodeBuild",
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Sub": "${AppName}-codebuild-role"
        },
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "codebuild.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/"
      }
    },
    "CodeBuildRolePolicy": {
      "Description": "Setting IAM policy for the service role for AWS CodeBuild",
      "Type": "AWS::IAM::Policy",
      "DependsOn": "CodeBuildTrustRole",
      "Properties": {
        "PolicyName": "CodeBuildRolePolicy",
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": [
                "*"
              ]
            },
            {
              "Effect": "Allow",
              "Resource": [
                "*"
              ],
              "Action": [
                "s3:*"
              ]
            },
            {
              "Effect": "Allow",
              "Resource": [
                "*"
              ],
              "Action": [
                "kms:GenerateDataKey*",
                "kms:Encrypt",
                "kms:Decrypt"
              ]
            },
            {
              "Effect": "Allow",
              "Resource": [
                "*"
              ],
              "Action": [
                "sns:SendMessage"
              ]
            }
          ]
        },
        "Roles": [
          {
            "Ref": "CodeBuildTrustRole"
          }
        ]
      }
    },
    "CloudFormationTrustRole": {
      "Description": "Creating service role in IAM for AWS CloudFormation",
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Sub": "${AppName}-cloudformation-role"
        },
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "cloudformation.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/"
      }
    },
    "CloudFormationRolePolicy": {
      "Description": "Setting IAM policy for the service role for AWS CloudFormation",
      "Type": "AWS::IAM::Policy",
      "DependsOn": "CloudFormationTrustRole",
      "Properties": {
        "PolicyName": "CloudFormationRolePolicy",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject",
                "s3:GetObjectVersion",
                "s3:GetBucketVersioning"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "s3:PutObject"
              ],
              "Resource": [
                "arn:aws:s3:::codepipeline*"
              ],
              "Effect": "Allow"
            },
            {
              "Action": [
                "lambda:*"
              ],
              "Resource": {
                "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:*"
              },
              "Effect": "Allow"
            },
            {
              "Action": [
                "apigateway:*"
              ],
              "Resource": {
                "Fn::Sub": "arn:aws:apigateway:${AWS::Region}::*"
              },
              "Effect": "Allow"
            },
            {
              "Action": [
                "iam:GetRole",
                "iam:CreateRole",
                "iam:DeleteRole"
              ],
              "Resource": {
                "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/${AppName}-*"
              },
              "Effect": "Allow"
            },
            {
              "Action": [
                "iam:AttachRolePolicy",
                "iam:DetachRolePolicy"
              ],
              "Resource": {
                "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/${AppName}-*"
              },
              "Effect": "Allow"
            },
            {
              "Action": [
                "iam:PassRole"
              ],
              "Resource": [
                "*"
              ],
              "Effect": "Allow"
            },
            {
              "Action": [
                "cloudformation:CreateChangeSet"
              ],
              "Resource": {
                "Fn::Sub": "arn:aws:cloudformation:${AWS::Region}:aws:transform/Serverless-2016-10-31"
              },
              "Effect": "Allow"
            }
          ]
        },
        "Roles": [
          {
            "Ref": "CloudFormationTrustRole"
          }
        ]
      }
    },
    "CodePipelineTrustRole": {
      "Description": "Creating service role in IAM for AWS CodePipeline",
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Sub": "${AppName}-codepipeline-role"
        },
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "codepipeline.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/"
      }
    },
    "CodePipelineRolePolicy": {
      "Description": "Setting IAM policy for the service role for AWS CodePipeline",
      "Type": "AWS::IAM::Policy",
      "DependsOn": "CodePipelineTrustRole",
      "Properties": {
        "PolicyName": "CodePipelineRolePolicy",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject",
                "s3:GetObjectVersion",
                "s3:GetBucketVersioning"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "s3:PutObject"
              ],
              "Resource": [
                "arn:aws:s3:::codepipeline*"
              ],
              "Effect": "Allow"
            },
            {
              "Action": [
                "codebuild:StartBuild",
                "codebuild:BatchGetBuilds"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "cloudwatch:*",
                "s3:*",
                "sns:*",
                "cloudformation:*",
                "rds:*",
                "sqs:*",
                "iam:PassRole"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "lambda:InvokeFunction",
                "lambda:ListFunctions"
              ],
              "Resource": "*",
              "Effect": "Allow"
            }
          ]
        },
        "Roles": [
          {
            "Ref": "CodePipelineTrustRole"
          }
        ]
      }
    },
    "S3Bucket": {
      "Description": "Creating Amazon S3 bucket for AWS CodePipeline artifacts",
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {
          "Fn::Sub": "serverless-app-${AppName}-${AWS::AccountId}-${AWS::Region}"
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        },
        "Tags" : [
          { "Key" : "BusinessUnit", "Value" : { "Ref" : "BusinessUnit" }},
          { "Key" : "CostUnit", "Value" : { "Ref" : "CostUnit" }},
          { "Key" : "SolutionName", "Value" : { "Ref" : "SolutionName" }}
        ]
      }
    },
    "S3ArtifactBucketPolicy": {
      "DependsOn": [
        "S3Bucket"
      ],
      "Description": "Setting Amazon S3 bucket policy for AWS CodePipeline access",
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "S3Bucket"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "SSEAndSSLPolicy",
          "Statement": [
            {
              "Sid": "DenyInsecureConnections",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:*",
              "Resource": {
                "Fn::Sub": "arn:aws:s3:::${S3Bucket}/*"
              },
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "CodeBuildProject": {
      "Description": "Creating AWS CodeBuild project",
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE"
        },
        "Description": {
          "Fn::Sub": "Building stage for ${AppName}."
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": [
            {
              "Name": "S3_BUCKET",
              "Value": {
                "Ref": "S3Bucket"
              }
            }
          ],
          "Image": {
            "Ref": "CodeBuildImage"
          },
          "Type": "LINUX_CONTAINER"
        },
        "Name": {
          "Fn::Sub": "${AppName}-build"
        },
        "ServiceRole": {
          "Ref": "CodeBuildTrustRole"
        },
        "Source": {
          "Type": "CODEPIPELINE"
        },
        "Tags": [
          {
            "Key": "app-name",
            "Value": {
              "Ref": "AppName"
            }
          }
        ],
        "TimeoutInMinutes": 5
      }
    },
    "ProjectPipeline": {
      "DependsOn": [
        "S3Bucket",
        "CodeBuildProject"
      ],
      "Description": "Creating a deployment pipeline for your project in AWS CodePipeline",
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "Name": {
          "Fn::Sub": "${AppName}-pipeline"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "CodePipelineTrustRole",
            "Arn"
          ]
        },
        "Stages": [
          {
            "Name": "Source",
            "Actions": [
              {
                "Name": "source",
                "InputArtifacts": [

                ],
                "ActionTypeId": {
                  "Version": "1",
                  "Category": "Source",
                  "Owner": "ThirdParty",
                  "Provider": "GitHub"
                },
                "OutputArtifacts": [
                  {
                    "Name": {
                      "Fn::Sub": "${AppName}-SourceArtifact"
                    }
                  }
                ],
                "Configuration": {
                  "Repo": {
                    "Ref": "GitHubRepoName"
                  },
                  "Branch": {
                    "Ref": "GitHubRepoBranch"
                  },
                  "OAuthToken": {
                    "Ref": "GitHubToken"
                  },
                  "Owner": {
                    "Ref": "GitHubUser"
                  }
                },
                "RunOrder": 1
              }
            ]
          },
          {
            "Name": "Test-and-Build",
            "Actions": [
              {
                "Name": "build-from-source",
                "InputArtifacts": [
                  {
                    "Name": {
                      "Fn::Sub": "${AppName}-SourceArtifact"
                    }
                  }
                ],
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "OutputArtifacts": [
                  {
                    "Name": {
                      "Fn::Sub": "${AppName}-BuildArtifact"
                    }
                  }
                ],
                "Configuration": {
                  "ProjectName": {
                    "Fn::Sub": "${AppName}-build"
                  }
                },
                "RunOrder": 1
              }
            ]
          },
          {
            "Name": "Deploy",
            "Actions": [
              {
                "Name": "create-changeset",
                "InputArtifacts": [
                  {
                    "Name": {
                      "Fn::Sub": "${AppName}-BuildArtifact"
                    }
                  }
                ],
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "OutputArtifacts": [

                ],
                "Configuration": {
                  "StackName": {
                    "Fn::Sub": "${AppName}-serverless-stack"
                  },
                  "ActionMode": "CHANGE_SET_REPLACE",
                  "RoleArn": {
                    "Ref": "CloudFormationTrustRole"
                  },
                  "ChangeSetName": "pipeline-changeset",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "TemplatePath": {
                    "Fn::Sub": "${AppName}-BuildArtifact::${OutputTemplate}"
                  }
                },
                "RunOrder": 1
              },
              {
                "Name": "execute-changeset",
                "InputArtifacts": [

                ],
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "OutputArtifacts": [

                ],
                "Configuration": {
                  "StackName": {
                    "Fn::Sub": "${AppName}-serverless-stack"
                  },
                  "ActionMode": "CHANGE_SET_EXECUTE",
                  "ChangeSetName": "pipeline-changeset"
                },
                "RunOrder": 2
              }
            ]
          }
        ],
        "ArtifactStore": {
          "Type": "S3",
          "Location": {
            "Ref": "S3Bucket"
          }
        }
      }
    }
  },
  "Outputs": {
    "CodePipelineRoleArn": {
      "Description": "Role arn for code pipeline",
      "Value": {
        "Fn::GetAtt": [
          "CodePipelineTrustRole",
          "Arn"
        ]
      }
    },
    "CodePipelineRole": {
      "Description": "Role for code pipeline",
      "Value": {
        "Ref": "CodePipelineTrustRole"
      }
    },
    "CloudformationDeployRoleArn": {
      "Description": "Role arn for cloudformation to deploy with.",
      "Value": {
        "Fn::GetAtt": [
          "CloudFormationTrustRole",
          "Arn"
        ]
      }
    },
    "CloudformationDeployRole": {
      "Description": "Role for cloudformation to deploy with.",
      "Value": {
        "Ref": "CloudFormationTrustRole"
      }
    },
    "CodeBuildRoleArn": {
      "Description": "Role arn for code build to build",
      "Value": {
        "Fn::GetAtt": [
          "CodeBuildTrustRole",
          "Arn"
        ]
      }
    },
    "CodeBuildRole": {
      "Description": "Role for code build to build",
      "Value": {
        "Ref": "CodeBuildTrustRole"
      }
    }
  }
}
